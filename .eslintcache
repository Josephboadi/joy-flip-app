[{"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\index.js":"1","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\App.js":"2","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\reportWebVitals.js":"3","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\store\\index.js":"4","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\index.js":"5","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\category.reducers.js":"6","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\constants.js":"7","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\HomePage\\index.js":"8","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\Header\\index.js":"9","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\MenuHeader\\index.js":"10","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\index.js":"11","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\category.actions.js":"12","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\helpers\\axios.js":"13","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\urlConfig.js":"14","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\index.js":"15","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\Layout\\index.js":"16","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\product.reducer.js":"17","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\utils\\getParams.js":"18","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ProductPage\\index.js":"19","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ProductStore\\index.js":"20","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\product.action.js":"21","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Card\\index.js":"22","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\MaterialUI\\index.js":"23","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\auth.reducer.js":"24","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\user.reducer.js":"25","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\auth.action.js":"26","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\user.action.js":"27","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductDetailsPage\\index.js":"28","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\cart.action.js":"29","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CartPage\\index.js":"30","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CartPage\\CartItem\\index.js":"31","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\PriceDetails\\index.js":"32","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\cart.reducer.js":"33","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductDetailsPage\\script.js":"34","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CheckoutPage\\index.js":"35","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CheckoutPage\\AddressForm.js":"36","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\OrderPage\\index.js":"37","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js":"38","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\OrderDetailsPage\\index.js":"39","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Rating\\index.js":"40","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Price\\index.js":"41","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Cart\\index.js":"42"},{"size":645,"mtime":1608335175593,"results":"43","hashOfConfig":"44"},{"size":1614,"mtime":1611059901283,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":316,"mtime":1608305155333,"results":"47","hashOfConfig":"44"},{"size":473,"mtime":1608129213241,"results":"48","hashOfConfig":"44"},{"size":4918,"mtime":1611143559234,"results":"49","hashOfConfig":"44"},{"size":2538,"mtime":1611143281263,"results":"50","hashOfConfig":"44"},{"size":172,"mtime":1606986805194,"results":"51","hashOfConfig":"44"},{"size":8063,"mtime":1611075052822,"results":"52","hashOfConfig":"44"},{"size":1227,"mtime":1608038642614,"results":"53","hashOfConfig":"44"},{"size":168,"mtime":1608126134482,"results":"54","hashOfConfig":"44"},{"size":677,"mtime":1606907887047,"results":"55","hashOfConfig":"44"},{"size":918,"mtime":1611314229972,"results":"56","hashOfConfig":"44"},{"size":314,"mtime":1611314259605,"results":"57","hashOfConfig":"44"},{"size":868,"mtime":1610707513673,"results":"58","hashOfConfig":"44"},{"size":247,"mtime":1608050407235,"results":"59","hashOfConfig":"44"},{"size":1701,"mtime":1611072755506,"results":"60","hashOfConfig":"44"},{"size":436,"mtime":1606987461998,"results":"61","hashOfConfig":"44"},{"size":1867,"mtime":1608042146330,"results":"62","hashOfConfig":"44"},{"size":2858,"mtime":1611151559564,"results":"63","hashOfConfig":"44"},{"size":1772,"mtime":1608121801994,"results":"64","hashOfConfig":"44"},{"size":416,"mtime":1608047300008,"results":"65","hashOfConfig":"44"},{"size":3439,"mtime":1611143957440,"results":"66","hashOfConfig":"44"},{"size":1353,"mtime":1611316143288,"results":"67","hashOfConfig":"44"},{"size":1976,"mtime":1611058587254,"results":"68","hashOfConfig":"44"},{"size":2768,"mtime":1611316034030,"results":"69","hashOfConfig":"44"},{"size":3613,"mtime":1611058306691,"results":"70","hashOfConfig":"44"},{"size":7159,"mtime":1608721216226,"results":"71","hashOfConfig":"44"},{"size":3654,"mtime":1611075547094,"results":"72","hashOfConfig":"44"},{"size":3446,"mtime":1611134441935,"results":"73","hashOfConfig":"44"},{"size":1486,"mtime":1611131724086,"results":"74","hashOfConfig":"44"},{"size":827,"mtime":1608310854180,"results":"75","hashOfConfig":"44"},{"size":1115,"mtime":1608125742980,"results":"76","hashOfConfig":"44"},{"size":2338,"mtime":1608566637998,"results":"77","hashOfConfig":"78"},{"size":10026,"mtime":1611133865424,"results":"79","hashOfConfig":"44"},{"size":6444,"mtime":1608726780023,"results":"80","hashOfConfig":"44"},{"size":2137,"mtime":1611155205826,"results":"81","hashOfConfig":"44"},{"size":1346,"mtime":1610716539115,"results":"82","hashOfConfig":"44"},{"size":3854,"mtime":1611153767264,"results":"83","hashOfConfig":"44"},{"size":442,"mtime":1611151369428,"results":"84","hashOfConfig":"44"},{"size":380,"mtime":1611152022885,"results":"85","hashOfConfig":"44"},{"size":679,"mtime":1611077223238,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1h60k2e",{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19mdbdn",{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"89"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"89"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"89"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\index.js",[],["190","191"],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\App.js",["192","193"],"import \"./App.css\";\nimport HomePage from \"./containers/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProductListPage from \"./containers/ProductListPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn, updateCart } from \"./redux/actions\";\nimport { useEffect } from \"react\";\nimport ProductDetailsPage from \"./containers/ProductDetailsPage\";\nimport CartPage from \"./containers/CartPage\";\nimport CheckoutPage from \"./containers/CheckoutPage\";\nimport OrderPage from \"./containers/OrderPage\";\nimport OrderDetailsPage from \"./containers/OrderDetailsPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    console.log(\"App.js - updateCart\");\n    dispatch(updateCart());\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route path=\"/account/orders\" component={OrderPage} />\n          <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n          <Route\n            path=\"/:productSlug/:productId/p\"\n            component={ProductDetailsPage}\n          />\n          <Route path=\"/:slug\" exact component={ProductListPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\reportWebVitals.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\store\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\category.reducers.js",["194","195","196","197"],"import { categoryConstansts } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n  let myCategories = [];\r\n\r\n  if (parentId == undefined) {\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        // type: category.type,\r\n        children: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  for (let cat of categories) {\r\n    if (cat._id == parentId) {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategories(\r\n              parentId,\r\n              [\r\n                ...cat.children,\r\n                {\r\n                  _id: category._id,\r\n                  name: category.name,\r\n                  slug: category.slug,\r\n                  parentId: category.parentId,\r\n                  children: category.children,\r\n                },\r\n              ],\r\n              category\r\n            )\r\n          : [],\r\n      });\r\n    } else {\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children\r\n          ? buildNewCategories(parentId, cat.children, category)\r\n          : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  return myCategories;\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n      };\r\n      break;\r\n    case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n      const category = action.payload.category;\r\n      const updatedCategories = buildNewCategories(\r\n        category.parentId,\r\n        state.categories,\r\n        category\r\n      );\r\n      console.log(\"updated categoires\", updatedCategories);\r\n\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n\r\n  //   for (let cat of categories) {\r\n  //     if (cat._id == parentId) {\r\n  //       const newCategory = {\r\n  //         _id: category._id,\r\n  //         name: category.name,\r\n  //         slug: category.slug,\r\n  //         parentId: category.parentId,\r\n  //         type: category.type,\r\n  //         children: [],\r\n  //       };\r\n  //       myCategories.push({\r\n  //         ...cat,\r\n  //         children:\r\n  //           cat.children.length > 0\r\n  //             ? [...cat.children, newCategory]\r\n  //             : [newCategory],\r\n  //       });\r\n  //     } else {\r\n  //       myCategories.push({\r\n  //         ...cat,\r\n  //         children: cat.children\r\n  //           ? buildNewCategories(parentId, cat.children, category)\r\n  //           : [],\r\n  //       });\r\n  //     }\r\n  //   }\r\n\r\n  //   return myCategories;\r\n  // };\r\n\r\n  // export default (state = initState, action) => {\r\n  //   switch (action.type) {\r\n  //     case categoryConstansts.GET_ALL_CATEGORIES_REQUEST:\r\n  //       state = {\r\n  //         ...state,\r\n  //         loading: true,\r\n  //       };\r\n  //       break;\r\n  //     case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n  //       state = {\r\n  //         ...state,\r\n  //         categories: action.payload.categories,\r\n  //       };\r\n  //       break;\r\n  //     case categoryConstansts.GET_ALL_CATEGORIES_FAILURE:\r\n  //       state = {\r\n  //         ...state,\r\n  //         loading: false,\r\n  //         error: action.payload.error,\r\n  //       };\r\n  //       break;\r\n  //     case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n  //       state = {\r\n  //         ...state,\r\n  //         loading: true,\r\n  //       };\r\n  //       break;\r\n  //     case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n  //       const category = action.payload.category;\r\n  //       const updatedCategories = buildNewCategories(\r\n  //         category.parentId,\r\n  //         state.categories,\r\n  //         category\r\n  //       );\r\n  //       //   console.log(\"updated categoires\", updatedCategories);\r\n\r\n  //       state = {\r\n  //         ...state,\r\n  //         categories: updatedCategories,\r\n  //         loading: false,\r\n  //       };\r\n  //       break;\r\n  //     case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n  //       state = {\r\n  //         ...initState,\r\n  //         loading: false,\r\n  //         error: action.payload.error,\r\n  //       };\r\n  //       break;\r\n  //     // case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\r\n  //     //     state = {\r\n  //     //         ...state,\r\n  //     //         loading: true\r\n  //     //     }\r\n  //     //     break;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   return state;\r\n};\r\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\constants.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\HomePage\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\Header\\index.js",["198","199","200","201","202","203","204","205"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport flipkartLogo from \"../../images/logo/flipkart.png\";\nimport goldenStar from \"../../images/logo/golden-star.png\";\nimport { IoIosArrowDown, IoIosCart, IoIosSearch } from \"react-icons/io\";\nimport {\n  Modal,\n  MaterialInput,\n  MaterialButton,\n  DropdownMenu,\n} from \"../MaterialUI\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  login,\n  signout,\n  getCartItems,\n  signup as _signup,\n} from \"../../redux/actions\";\nimport Cart from \"../UI/Cart\";\n\nconst Header = (props) => {\n  const [loginModal, setLoginModal] = useState(false);\n  const [signup, setSignup] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n\n  const userSignup = () => {\n    console.log({ firstName, lastName, email, password });\n    const user = { firstName, lastName, email, password };\n    if (\n      firstName === \"\" ||\n      lastName === \"\" ||\n      email === \"\" ||\n      password === \"\"\n    ) {\n      return;\n    }\n    dispatch(_signup(user));\n  };\n\n  const userLogin = () => {\n    if (signup) {\n      userSignup();\n    } else {\n      dispatch(login({ email, password }));\n    }\n  };\n\n  const logout = () => {\n    dispatch(signout());\n  };\n\n  useEffect(() => {\n    if (auth.authenticate) {\n      setLoginModal(false);\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    dispatch(getCartItems());\n  }, []);\n\n  const renderLoggedInMenu = () => {\n    return (\n      <DropdownMenu\n        menu={<a className=\"fullName\">{auth.user.fullName}</a>} //\n        menus={[\n          { label: \"My Profile\", href: \"\", icon: null },\n          { label: \"SuperCoin Zone\", href: \"\", icon: null },\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\n          { label: \"Orders\", href: \"/account/orders\", icon: null },\n          { label: \"Wishlist\", href: \"\", icon: null },\n          { label: \"My Chats\", href: \"\", icon: null },\n          { label: \"Coupons\", href: \"\", icon: null },\n          { label: \"Rewards\", href: \"\", icon: null },\n          { label: \"Notifications\", href: \"\", icon: null },\n          { label: \"Gift Cards\", href: \"\", icon: null },\n          { label: \"Logout\", href: \"\", icon: null, onClick: logout }, //\n        ]}\n      />\n    );\n  };\n\n  const renderNonLoggedInMenu = () => {\n    return (\n      <DropdownMenu\n        menu={\n          <a\n            className=\"loginButton\"\n            onClick={() => {\n              setSignup(false);\n              setLoginModal(true);\n            }}>\n            Login\n          </a>\n        }\n        menus={[\n          { label: \"My Profile\", href: \"\", icon: null },\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\n          {\n            label: \"Orders\",\n            href: `/account/orders`,\n            icon: null,\n            onClick: () => {\n              !auth.authenticate && setLoginModal(true);\n            },\n          },\n          { label: \"Wishlist\", href: \"\", icon: null },\n          { label: \"Rewards\", href: \"\", icon: null },\n          { label: \"Gift Cards\", href: \"\", icon: null },\n        ]}\n        firstMenu={\n          <div className=\"firstmenu\">\n            <span>New Customer?</span>\n            <a\n              onClick={() => {\n                setLoginModal(true);\n                setSignup(true);\n              }}\n              style={{ color: \"#2874f0\" }}>\n              Sign Up\n            </a>\n          </div>\n        }\n      />\n    );\n  };\n\n  return (\n    <div className=\"header\">\n      <Modal visible={loginModal} onClose={() => setLoginModal(false)}>\n        <div className=\"authContainer\">\n          <div className=\"row\">\n            <div className=\"leftspace\">\n              <h2>Login</h2>\n              <p>Get access to your Orders, Wishlist and Recommendations</p>\n            </div>\n            <div className=\"rightspace\">\n              <div className=\"loginInputContainer\">\n                {signup && (\n                  <MaterialInput\n                    type=\"text\"\n                    label=\"Enter First Name\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                )}\n                {signup && (\n                  <MaterialInput\n                    type=\"text\"\n                    label=\"Enter Last Name\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                )}\n                <MaterialInput\n                  type=\"text\"\n                  label=\"Enter Email/Enter Mobile Number\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n\n                <MaterialInput\n                  type=\"password\"\n                  label=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  // rightElement={<a href=\"#\">Forgot?</a>}\n                />\n\n                <MaterialButton\n                  title={signup ? \"Register\" : \"Login\"}\n                  bgColor=\"#fb641b\"\n                  textColor=\"#ffffff\"\n                  style={{\n                    margin: \"40px 0 20px 0\",\n                  }}\n                  onClick={userLogin}\n                />\n                <p style={{ textAlign: \"center\" }}>OR</p>\n\n                <MaterialButton\n                  title=\"Request OTP\"\n                  bgColor=\"#ffffff\"\n                  textColor=\"#2874f0\"\n                  style={{\n                    margin: \"20px 0\",\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <div className=\"subHeader\">\n        {/* Logo  */}\n        <div className=\"logo\">\n          <a href=\"\">\n            <img src={flipkartLogo} className=\"logoimage\" alt=\"\" />\n          </a>\n          <a style={{ marginTop: \"-10px\" }}>\n            <span className=\"exploreText\">Explore</span>\n            <span className=\"plusText\">Plus</span>\n            <img src={goldenStar} className=\"goldenStar\" alt=\"\" />\n          </a>\n        </div>\n        {/* logo ends here */}\n\n        {/* search component */}\n        <div\n          style={{\n            padding: \"0 10px\",\n          }}>\n          <div className=\"searchInputContainer\">\n            <input\n              className=\"searchInput\"\n              placeholder={\"search for products, brands and more\"}\n            />\n            <div className=\"searchIconContainer\">\n              <IoIosSearch\n                style={{\n                  color: \"#2874f0\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        {/* search component ends here */}\n\n        {/* right side menu */}\n        <div className=\"rightMenu\">\n          {auth.authenticate ? renderLoggedInMenu() : renderNonLoggedInMenu()}\n          <DropdownMenu\n            menu={\n              <a className=\"more\">\n                <span>More</span>\n                <IoIosArrowDown />\n              </a>\n            }\n            menus={[\n              { label: \"Notification Preference\", href: \"\", icon: null },\n              { label: \"Sell on flipkart\", href: \"\", icon: null },\n              { label: \"24x7 Customer Care\", href: \"\", icon: null },\n              { label: \"Advertise\", href: \"\", icon: null },\n              { label: \"Download App\", href: \"\", icon: null },\n            ]}\n          />\n          <div>\n            <a href={`/cart`} className=\"cart\">\n              {/* <IoIosCart /> */}\n              <Cart count={Object.keys(cart.cartItems).length} />\n              <span style={{ margin: \"0 10px\" }}>Cart</span>\n            </a>\n          </div>\n        </div>\n        {/* right side menu ends here */}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\MenuHeader\\index.js",["206"],"import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllCategory } from \"../../redux/actions\";\r\n\r\nconst MenuHeader = () => {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push(\r\n        <li key={category.name}>\r\n          {category.parentId ? (\r\n            <a\r\n              href={`/${category.slug}?cid=${category._id}&type=${category.type}`}>\r\n              {category.name}\r\n            </a>\r\n          ) : (\r\n            <span>{category.name}</span>\r\n          )}\r\n          {category.children.length > 0 ? (\r\n            <ul>{renderCategories(category.children)}</ul>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n  return (\r\n    <div className=\"menuHeader\">\r\n      <ul>\r\n        {category.categories.length > 0\r\n          ? renderCategories(category.categories)\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuHeader;\r\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\category.actions.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\helpers\\axios.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\urlConfig.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\Layout\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\product.reducer.js",["207","208"],"import { productConstants } from \"../actions/constants\";\n\nconst initState = {\n  products: [],\n  priceRange: {},\n  productsByPrice: {\n    // under6k: [],\n    // under8k: [],\n    // under15k: [],\n    // under20k: [],\n    // under30k: [],\n  },\n  pageRequest: false,\n  page: {},\n  error: null,\n  productDetails: {},\n  loading: false,\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case productConstants.GET_PRODUCTS_BY_SLUG:\n      state = {\n        ...state,\n        products: action.payload.products,\n        priceRange: action.payload.priceRange,\n        productsByPrice: {\n          ...action.payload.productsByPrice,\n        },\n      };\n      break;\n    case productConstants.GET_PRODUCT_PAGE_REQUEST:\n      state = {\n        ...state,\n        pageRequest: true,\n      };\n      break;\n    case productConstants.GET_PRODUCT_PAGE_SUCCESS:\n      state = {\n        ...state,\n        page: action.payload.page,\n        pageRequest: false,\n      };\n      break;\n    case productConstants.GET_PRODUCT_PAGE_FAILURE:\n      state = {\n        ...state,\n        pageRequest: false,\n        error: action.payload.error,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        productDetails: action.payload.productDetails,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n  }\n\n  return state;\n};\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\utils\\getParams.js",["209"],"export default (query) => {\n    if(query){\n        const queryString = query.split(\"?\")[1];\n        if(queryString.length > 0){\n            const params = queryString.split(\"&\");\n            const paramsObj = {};\n            params.forEach(param => {\n                const keyValue = param.split(\"=\");\n                paramsObj[keyValue[0]] = keyValue[1];\n            });\n\n            return paramsObj;\n        }\n    }\n\n    return {};\n}","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ProductPage\\index.js",["210"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductPage } from \"../../../redux/actions\";\nimport getParams from \"../../../utils/getParams\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\nimport Card from \"../../../components/UI/Card\";\n\nconst ProductPage = (props) => {\n  const dispatch = useDispatch();\n  const product = useSelector((state) => state.product);\n  const { page } = product;\n\n  useEffect(() => {\n    const params = getParams(props.location.search);\n    console.log({ params });\n    const payload = {\n      params,\n    };\n    dispatch(getProductPage(payload));\n  }, []);\n\n  return (\n    <div style={{ margin: \"0 10px\" }}>\n      <h3>{page.title}</h3>\n      <Carousel renderThumbs={() => {}}>\n        {page.banners &&\n          page.banners.map((banner, index) => (\n            <a\n              key={index}\n              style={{ display: \"block\" }}\n              href={banner.navigateTo}>\n              <img src={banner.img} alt=\"\" />\n            </a>\n          ))}\n      </Carousel>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          margin: \"10px 0\",\n        }}>\n        {page.products &&\n          page.products.map((product, index) => (\n            <Card\n              key={index}\n              style={{\n                width: \"400px\",\n                height: \"200px\",\n                margin: \"5px\",\n              }}>\n              <img\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n                src={product.img}\n                alt=\"\"\n              />\n            </Card>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductPage;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ProductStore\\index.js",["211","212","213"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductBySlug } from \"../../../redux/actions/product.action\";\nimport { genPublicUrl } from \"../../../urlConfig\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../../../components/UI/Card\";\nimport \"./style.css\";\nimport Rating from \"../../../components/UI/Rating\";\nimport Price from \"../../../components/UI/Price\";\nimport { MaterialButton } from \"../../../components/MaterialUI\";\n\nconst ProductStore = (props) => {\n  const product = useSelector((state) => state.product);\n  const priceRange = product.priceRange;\n  // const [priceRange, setPriceRange] = useState({\n  //   under6k: 6000,\n  //   under8k: 8000,\n  //   under15k: 15000,\n  //   under20k: 20000,\n  //   under30: 30000,\n  // });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { match } = props;\n    dispatch(getProductBySlug(match.params.slug));\n  }, []);\n\n  return (\n    <>\n      {Object.keys(product.productsByPrice).map((key, index) => {\n        return (\n          <Card\n            headerLeft={`${props.match.params.slug} mobile under ${priceRange[key]}`}\n            headerRight={\n              <MaterialButton\n                title={\"VIEW ALL\"}\n                style={{\n                  width: \"96px\",\n                }}\n                bgColor=\"#2874f0\"\n                fontSize=\"12px\"\n              />\n            }\n            style={{\n              width: \"calc(100% - 40px)\",\n              margin: \"20px\",\n            }}>\n            <div style={{ display: \"flex\" }}>\n              {product.productsByPrice[key].map((product) => (\n                <Link\n                  to={`/${product.slug}/${product._id}/p`}\n                  style={{\n                    display: \"block\",\n                    textDecoration: \"none\",\n                    color: \"#000\",\n                  }}\n                  className=\"productContainer\">\n                  <div className=\"productImgContainer\">\n                    <img src={product.productPictures[0].img} alt=\"\" />\n                  </div>\n                  <div className=\"productInfo\">\n                    <div style={{ margin: \"10px 0\" }}>{product.name}</div>\n                    <div>\n                      <Rating value=\"4.3\" />\n                      &nbsp;&nbsp;\n                      <span\n                        style={{\n                          color: \"#777\",\n                          fontWeight: \"500\",\n                          fontSize: \"12px\",\n                        }}>\n                        (3353)\n                      </span>\n                    </div>\n                    <Price value={product.price} />\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </Card>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ProductStore;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\product.action.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Card\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\MaterialUI\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\auth.reducer.js",["214","215"],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\user.reducer.js",["216","217"],"import { userConstants } from \"../actions/constants\";\n\nconst initState = {\n  address: [],\n  orders: [],\n  orderDetails: {},\n  error: null,\n  loading: false,\n  orderFetching: false,\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case userConstants.GET_USER_ADDRESS_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case userConstants.GET_USER_ADDRESS_SUCCESS:\n      state = {\n        ...state,\n        address: action.payload.address,\n        loading: false,\n      };\n      break;\n    case userConstants.GET_USER_ADDRESS_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_SUCCESS:\n      state = {\n        ...state,\n        address: action.payload.address,\n        loading: false,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_REQUEST:\n      state = {\n        ...state,\n        orderFetching: true,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n        orderFetching: false,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_FAILURE:\n      state = {\n        ...state,\n        orders: action.payload.error,\n        orderFetching: false,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_REQUEST:\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_SUCCESS:\n      state = {\n        ...state,\n        orderDetails: action.payload.order,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_FAILURE:\n      break;\n  }\n\n  return state;\n};\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\auth.action.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\user.action.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductDetailsPage\\index.js",["218","219","220","221","222","223","224"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductDetailsById } from \"../../redux/actions\";\nimport Layout from \"../../components/Layout\";\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\nimport { FaSearchMinus, FaSearchPlus } from \"react-icons/fa\";\nimport { BiRupee, BiZoomIn } from \"react-icons/bi\";\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\nimport \"./style.css\";\nimport { generatePublicUrl } from \"../../urlConfig\";\nimport { addToCart } from \"../../redux/actions\";\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\nimport mediumZoom from \"medium-zoom\";\n// import \"./script\";\n\nconst ProductDetailsPage = (props) => {\n  const dispatch = useDispatch();\n  const product = useSelector((state) => state.product);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  mediumZoom(\"[data-zoomable]\");\n\n  useEffect(() => {\n    const { productId } = props.match.params;\n    console.log(props);\n    const payload = {\n      params: {\n        productId,\n      },\n    };\n    dispatch(getProductDetailsById(payload));\n  }, []);\n\n  // const handleClick = (index) => {\n  //   const newActiveIndex = setActiveIndex(index);\n  //   console.log(newActiveIndex);\n  // };\n\n  if (Object.keys(product.productDetails).length === 0) {\n    return null;\n  }\n\n  return (\n    <Layout>\n      {/* <div>{product.productDetails.name}</div> */}\n      <div className=\"productDescriptionContainer\">\n        <div className=\"flexRow\">\n          <div className=\"verticalImageStack\">\n            {product.productDetails.productPictures.map((thumb, index) => (\n              <div\n                className=\"thumbnail\"\n                onMouseEnter={() => setActiveIndex(index)}\n                onClick={() => setActiveIndex(index)}>\n                <img src={thumb.img} alt={thumb.img} />\n              </div>\n            ))}\n            {/* <div className=\"thumbnail active\">\n              {\n                product.productDetails.productPictures.map((thumb, index) => \n                <img src={generatePublicUrl(thumb.img)} alt={thumb.img} />)\n              }\n            </div> */}\n          </div>\n          <div className=\"productDescContainer\">\n            <TransformWrapper\n              defaultScale={1}\n              defaultPositionX={100}\n              defaultPositionY={200}>\n              {({ zoomIn, zoomOut, ...rest }) => (\n                <>\n                  <TransformComponent>\n                    <div className=\"productDescImgContainer\">\n                      {/* <div \n              // id=\"lens\"\n              ></div> */}\n                      <img\n                        // id=\"featured\"\n                        src={\n                          product.productDetails.productPictures[activeIndex]\n                            .img\n                        }\n                        alt={`${product.productDetails.productPictures[activeIndex].img}`}\n                      />\n                    </div>\n                  </TransformComponent>\n\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-around\",\n                      alignItems: \"center\",\n                      marginBottom: \"20px\",\n                      // marginTop: \"-10px\",\n                    }}>\n                    <FaSearchMinus onClick={zoomOut} />\n                    <FaSearchPlus onClick={zoomIn} />\n                  </div>\n                </>\n              )}\n            </TransformWrapper>\n\n            {/* action buttons */}\n            <div className=\"flexRow\">\n              <MaterialButton\n                title=\"ADD TO CART\"\n                bgColor=\"#ff9f00\"\n                textColor=\"#ffffff\"\n                style={{\n                  marginRight: \"5px\",\n                }}\n                icon={<IoMdCart />}\n                onClick={() => {\n                  const { _id, name, price } = product.productDetails;\n                  const img = product.productDetails.productPictures[0].img;\n                  dispatch(addToCart({ _id, name, price, img }));\n                  props.history.push(`/cart`);\n                }}\n              />\n              <MaterialButton\n                title=\"BUY NOW\"\n                bgColor=\"#fb641b\"\n                textColor=\"#ffffff\"\n                style={{\n                  marginLeft: \"5px\",\n                }}\n                icon={<AiFillThunderbolt />}\n              />\n            </div>\n          </div>\n        </div>\n        <div>\n          {/* home > category > subCategory > productName */}\n          <div className=\"breed\">\n            <ul>\n              <li>\n                <a href=\"#\">Home</a>\n                <IoIosArrowForward />\n              </li>\n              <li>\n                <a href=\"#\">Mobiles</a>\n                <IoIosArrowForward />\n              </li>\n              <li>\n                <a href=\"#\">Samsung</a>\n                <IoIosArrowForward />\n              </li>\n              <li>\n                <a href=\"#\">{product.productDetails.name}</a>\n              </li>\n            </ul>\n          </div>\n          {/* product description */}\n          <div className=\"productDetails\">\n            <p className=\"productTitle\">{product.productDetails.name}</p>\n            <div>\n              <span className=\"ratingCount\">\n                4.3 <IoIosStar />\n              </span>\n              <span className=\"ratingNumbersReviews\">\n                72,234 Ratings & 8,140 Reviews\n              </span>\n            </div>\n            <div className=\"extraOffer\">\n              Extra <BiRupee />\n              4500 off{\" \"}\n            </div>\n            <div className=\"flexRow priceContainer\">\n              <span className=\"price\">\n                <BiRupee />\n                {product.productDetails.price}\n              </span>\n              <span className=\"discount\" style={{ margin: \"0 10px\" }}>\n                22% off\n              </span>\n              {/* <span>i</span> */}\n            </div>\n            <div>\n              <p\n                style={{\n                  color: \"#212121\",\n                  fontSize: \"14px\",\n                  fontWeight: \"600\",\n                }}>\n                Available Offers\n              </p>\n              <p style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <span\n                  style={{\n                    width: \"100px\",\n                    fontSize: \"12px\",\n                    color: \"#878787\",\n                    fontWeight: \"600\",\n                    marginRight: \"20px\",\n                    marginBottom: \"5px\",\n                  }}>\n                  Description\n                </span>\n\n                <span\n                  style={{\n                    fontSize: \"12px\",\n                    color: \"#212121\",\n                  }}>\n                  {product.productDetails.description}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ProductDetailsPage;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\actions\\cart.action.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CartPage\\index.js",["225"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport CartItem from \"./CartItem\";\nimport { addToCart, getCartItems, removeCartItem } from \"../../redux/actions\";\nimport PriceDetails from \"../../components/PriceDetails\";\n\nimport \"./style.css\";\nimport { MaterialButton } from \"../../components/MaterialUI\";\n\n/*\nBefore Login\nAdd product to cart\nsave in localStorage\nwhen try to checkout ask for credentials and \nif logged in then add products to users cart database from localStorage\n\n\n*/\n\nconst CartPage = (props) => {\n  const cart = useSelector((state) => state.cart);\n  const auth = useSelector((state) => state.auth);\n  // const cartItems = cart.cartItems;\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setCartItems(cart.cartItems);\n  }, [cart.cartItems]);\n\n  useEffect(() => {\n    if (auth.authenticate) {\n      dispatch(getCartItems());\n    }\n  }, [auth.authenticate]);\n\n  const onQuantityIncrement = (_id, qty) => {\n    //console.log({_id, qty});\n    const { name, price, img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price, img }, 1));\n  };\n\n  const onQuantityDecrement = (_id, qty) => {\n    const { name, price, img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price, img }, -1));\n  };\n\n  const onRemoveCartItem = (_id) => {\n    dispatch(removeCartItem({ productId: _id }));\n  };\n\n  if (props.onlyCartItems) {\n    return (\n      <>\n        {Object.keys(cartItems).map((key, index) => (\n          <CartItem\n            key={index}\n            cartItem={cartItems[key]}\n            onQuantityInc={onQuantityIncrement}\n            onQuantityDec={onQuantityDecrement}\n          />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n        <Card\n          headerLeft={`My Cart`}\n          headerRight={<div>Deliver to</div>}\n          style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}>\n          {Object.keys(cartItems).map((key, index) => (\n            <CartItem\n              key={index}\n              cartItem={cartItems[key]}\n              onQuantityInc={onQuantityIncrement}\n              onQuantityDec={onQuantityDecrement}\n              onRemoveCartItem={onRemoveCartItem}\n            />\n          ))}\n\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              background: \"#ffffff\",\n              justifyContent: \"flex-end\",\n              boxShadow: \"0 0 10px 10px #eee\",\n              padding: \"10px 0\",\n              boxSizing: \"border-box\",\n            }}>\n            <div style={{ width: \"250px\" }}>\n              <MaterialButton\n                title=\"PLACE ORDER\"\n                onClick={() => props.history.push(`/checkout`)}\n              />\n            </div>\n          </div>\n        </Card>\n        <PriceDetails\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n            return qty + cart.cartItems[key].qty;\n          }, 0)}\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n            const { price, qty } = cart.cartItems[key];\n            return totalPrice + price * qty;\n          }, 0)}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CartPage;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CartPage\\CartItem\\index.js",["226"],"import React, { useState } from \"react\";\nimport { generatePublicUrl } from \"../../../urlConfig\";\nimport \"./style.css\";\n\nconst CartItem = (props) => {\n  const [qty, setQty] = useState(props.cartItem.qty);\n\n  const { _id, name, price, img } = props.cartItem;\n\n  const onQuantityIncrement = () => {\n    setQty(qty + 1);\n    props.onQuantityInc(_id, qty + 1);\n  };\n\n  const onQuantityDecrement = () => {\n    if (qty <= 1) return;\n    setQty(qty - 1);\n    props.onQuantityDec(_id, qty - 1);\n  };\n\n  return (\n    <div className=\"cartItemContainer\">\n      <div className=\"flexRow\">\n        <div className=\"cartProImgContainer\">\n          <img src={img} alt={\"\"} />\n        </div>\n        <div className=\"cartItemDetails\">\n          <div>\n            <p>{name}</p>\n            <p>Rs. {price}</p>\n          </div>\n          <div>Delivery in 3 - 5 days</div>\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"5px 0\",\n        }}>\n        {/* quantity control */}\n        <div className=\"quantityControl\">\n          <button onClick={onQuantityDecrement}>-</button>\n          <input value={qty} readOnly />\n          <button onClick={onQuantityIncrement}>+</button>\n        </div>\n        <button className=\"cartActionBtn\">save for later</button>\n        <button\n          className=\"cartActionBtn\"\n          onClick={() => props.onRemoveCartItem(_id)}>\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\PriceDetails\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\redux\\reducers\\cart.reducer.js",["227","228"],"import { cartConstants } from \"../actions/constants\";\n\nconst initState = {\n    cartItems: {\n        // 123: {\n        //     _id: 123,\n        //     name: 'Samsung mobile',\n        //     img: 'some.jpg',\n        //     price: 200,\n        //     qty: 1,\n        // }\n    },\n    updatingCart: false,\n    error: null\n};\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case cartConstants.ADD_TO_CART_REQUEST:\n            state = {\n                ...state,\n                updatingCart: true\n            }\n            break;\n        case cartConstants.ADD_TO_CART_SUCCESS:\n            state = {\n                ...state,\n                cartItems: action.payload.cartItems,\n                updatingCart: false\n            }\n            break;\n        case cartConstants.ADD_TO_CART_FAILURE:\n            state = {\n                ...state,\n                updatingCart: false,\n                error: action.payload.error\n            }\n            break;\n        case cartConstants.RESET_CART:\n            state = {\n                ...initState\n            }\n    }\n    return state;\n}","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductDetailsPage\\script.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CheckoutPage\\index.js",["229","230"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder, getAddress, getCartItems } from \"../../redux/actions\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Anchor,\n  MaterialButton,\n  MaterialInput,\n} from \"../../components/MaterialUI\";\nimport PriceDetails from \"../../components/PriceDetails\";\nimport Card from \"../../components/UI/Card\";\nimport CartPage from \"../CartPage\";\nimport AddressForm from \"./AddressForm\";\n\nimport \"./style.css\";\n\nconst CheckoutStep = (props) => {\n  return (\n    <div className=\"checkoutStep\">\n      <div\n        onClick={props.onClick}\n        className={`checkoutHeader ${props.active && \"active\"}`}>\n        <div>\n          <span className=\"stepNumber\">{props.stepNumber}</span>\n          <span className=\"stepTitle\">{props.title}</span>\n        </div>\n      </div>\n      {props.body && props.body}\n    </div>\n  );\n};\n\nconst Address = ({\n  adr,\n  selectAddress,\n  enableAddressEditForm,\n  confirmDeliveryAddress,\n  onAddressSubmit,\n}) => {\n  return (\n    <div className=\"flexRow addressContainer\">\n      <div>\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n      </div>\n      <div className=\"flexRow sb addressinfo\">\n        {!adr.edit ? (\n          <div style={{ width: \"100%\" }}>\n            <div className=\"addressDetail\">\n              <div>\n                <span className=\"addressName\">{adr.name}</span>\n                <span className=\"addressType\">{adr.addressType}</span>\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\n              </div>\n              {adr.selected && (\n                <Anchor\n                  name=\"EDIT\"\n                  onClick={() => enableAddressEditForm(adr)}\n                  style={{\n                    fontWeight: \"500\",\n                    color: \"#2874f0\",\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"fullAddress\">\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\n            </div>\n            {adr.selected && (\n              <MaterialButton\n                title=\"DELIVERY HERE\"\n                onClick={() => confirmDeliveryAddress(adr)}\n                style={{\n                  width: \"200px\",\n                  margin: \"10px 0\",\n                }}\n              />\n            )}\n          </div>\n        ) : (\n          <AddressForm\n            withoutLayout={true}\n            onSubmitForm={onAddressSubmit}\n            initialData={adr}\n            onCancel={() => {}}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst CheckoutPage = (props) => {\n  const user = useSelector((state) => state.user);\n  const auth = useSelector((state) => state.auth);\n  const [newAddress, setNewAddress] = useState(false);\n  const [address, setAddress] = useState([]);\n  const [confirmAddress, setConfirmAddress] = useState(false);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [orderSummary, setOrderSummary] = useState(false);\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\n  const [paymentOption, setPaymentOption] = useState(false);\n  const [confirmOrder, setConfirmOrder] = useState(false);\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const onAddressSubmit = (addr) => {\n    setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true);\n  };\n\n  const selectAddress = (addr) => {\n    //console.log(addr);\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id\n        ? { ...adr, selected: true }\n        : { ...adr, selected: false }\n    );\n    setAddress(updatedAddress);\n  };\n\n  const confirmDeliveryAddress = (addr) => {\n    setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true);\n  };\n\n  const enableAddressEditForm = (addr) => {\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n    );\n    setAddress(updatedAddress);\n  };\n\n  const userOrderConfirmation = () => {\n    setOrderConfirmation(true);\n    setOrderSummary(false);\n    setPaymentOption(true);\n  };\n\n  const onConfirmOrder = () => {\n    const totalAmount = Object.keys(cart.cartItems).reduce(\n      (totalPrice, key) => {\n        const { price, qty } = cart.cartItems[key];\n        return totalPrice + price * qty;\n      },\n      0\n    );\n    const items = Object.keys(cart.cartItems).map((key) => ({\n      productId: key,\n      payablePrice: cart.cartItems[key].price,\n      purchasedQty: cart.cartItems[key].qty,\n    }));\n    const payload = {\n      addressId: selectedAddress._id,\n      totalAmount,\n      items,\n      paymentStatus: \"pending\",\n      paymentType: \"cod\",\n    };\n\n    console.log(payload);\n    dispatch(addOrder(payload));\n    setConfirmOrder(true);\n  };\n\n  useEffect(() => {\n    auth.authenticate && dispatch(getAddress());\n    auth.authenticate && dispatch(getCartItems());\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    const address = user.address.map((adr) => ({\n      ...adr,\n      selected: false,\n      edit: false,\n    }));\n    setAddress(address);\n    //user.address.length === 0 && setNewAddress(true);\n  }, [user.address]);\n\n  useEffect(() => {\n    if (confirmOrder && user.placedOrderId) {\n      props.history.push(`/order_details/${user.placedOrderId}`);\n    }\n  }, [user.placedOrderId]);\n\n  return (\n    <Layout>\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n        <div className=\"checkoutContainer\">\n          {/* check if user logged in or not */}\n          <CheckoutStep\n            stepNumber={\"1\"}\n            title={\"LOGIN\"}\n            active={!auth.authenticate}\n            body={\n              auth.authenticate ? (\n                <div className=\"loggedInId\">\n                  <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\n                  <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\n                </div>\n              ) : (\n                <div>\n                  <MaterialInput label=\"Email\" />\n                </div>\n              )\n            }\n          />\n          <CheckoutStep\n            stepNumber={\"2\"}\n            title={\"DELIVERY ADDRESS\"}\n            active={!confirmAddress && auth.authenticate}\n            body={\n              <>\n                {confirmAddress ? (\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\n                ) : (\n                  address.map((adr) => (\n                    <Address\n                      selectAddress={selectAddress}\n                      enableAddressEditForm={enableAddressEditForm}\n                      confirmDeliveryAddress={confirmDeliveryAddress}\n                      onAddressSubmit={onAddressSubmit}\n                      adr={adr}\n                    />\n                  ))\n                )}\n              </>\n            }\n          />\n\n          {/* AddressForm */}\n          {confirmAddress ? null : newAddress ? (\n            <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\n          ) : auth.authenticate ? (\n            <CheckoutStep\n              stepNumber={\"+\"}\n              title={\"ADD NEW ADDRESS\"}\n              active={false}\n              onClick={() => setNewAddress(true)}\n            />\n          ) : null}\n\n          <CheckoutStep\n            stepNumber={\"3\"}\n            title={\"ORDER SUMMARY\"}\n            active={orderSummary}\n            body={\n              orderSummary ? (\n                <CartPage onlyCartItems={true} />\n              ) : orderConfirmation ? (\n                <div className=\"stepCompleted\">\n                  {Object.keys(cart.cartItems).length} items\n                </div>\n              ) : null\n            }\n          />\n\n          {orderSummary && (\n            <Card\n              style={{\n                margin: \"10px 0\",\n              }}>\n              <div\n                className=\"flexRow sb\"\n                style={{\n                  padding: \"20px\",\n                  alignItems: \"center\",\n                }}>\n                <p style={{ fontSize: \"12px\" }}>\n                  Order confirmation email will be sent to{\" \"}\n                  <strong>{auth.user.email}</strong>\n                </p>\n                <MaterialButton\n                  title=\"CONTINUE\"\n                  onClick={userOrderConfirmation}\n                  style={{\n                    width: \"200px\",\n                  }}\n                />\n              </div>\n            </Card>\n          )}\n\n          <CheckoutStep\n            stepNumber={\"4\"}\n            title={\"PAYMENT OPTIONS\"}\n            active={paymentOption}\n            body={\n              paymentOption && (\n                <div>\n                  <div\n                    className=\"flexRow\"\n                    style={{\n                      alignItems: \"center\",\n                      padding: \"20px\",\n                    }}>\n                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\n                    <div>Cash on delivery</div>\n                  </div>\n                  <MaterialButton\n                    title=\"CONFIRM ORDER\"\n                    onClick={onConfirmOrder}\n                    style={{\n                      width: \"200px\",\n                      margin: \"0 0 20px 20px\",\n                    }}\n                  />\n                </div>\n              )\n            }\n          />\n        </div>\n\n        {/* Price Component */}\n        <PriceDetails\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\n            return qty + cart.cartItems[key].qty;\n          }, 0)}\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\n            const { price, qty } = cart.cartItems[key];\n            return totalPrice + price * qty;\n          }, 0)}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CheckoutPage;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\CheckoutPage\\AddressForm.js",["231","232"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAddress } from \"../../redux/actions\";\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\n\n/**\n * @author\n * @function AddressForm\n **/\n\nconst AddressForm = (props) => {\n  const { initialData } = props;\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\n  const [mobileNumber, setMobileNumber] = useState(\n    initialData ? initialData.mobileNumber : \"\"\n  );\n  const [pinCode, setPinCode] = useState(\n    initialData ? initialData.pinCode : \"\"\n  );\n  const [locality, setLocality] = useState(\n    initialData ? initialData.locality : \"\"\n  );\n  const [address, setAddress] = useState(\n    initialData ? initialData.address : \"\"\n  );\n  const [cityDistrictTown, setCityDistrictTown] = useState(\n    initialData ? initialData.cityDistrictTown : \"\"\n  );\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\n  const [landmark, setLandmark] = useState(\n    initialData ? initialData.landmark : \"\"\n  );\n  const [alternatePhone, setAlternatePhone] = useState(\n    initialData ? initialData.alternatePhone : \"\"\n  );\n  const [addressType, setAddressType] = useState(\n    initialData ? initialData.addressType : \"\"\n  );\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const [submitFlag, setSubmitFlag] = useState(false);\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n  const inputContainer = {\n    width: \"100%\",\n    marginRight: 10,\n  };\n\n  const onAddressSubmit = (e) => {\n    const payload = {\n      address: {\n        name,\n        mobileNumber,\n        pinCode,\n        locality,\n        address,\n        cityDistrictTown,\n        state,\n        landmark,\n        alternatePhone,\n        addressType,\n      },\n    };\n    console.log(payload);\n    if (id) {\n      payload.address._id = id;\n    }\n    dispatch(addAddress(payload));\n    setSubmitFlag(true);\n  };\n\n  useEffect(() => {\n    console.log(\"addressCount\", user.address);\n    if (submitFlag) {\n      console.log(\"where are we\", user);\n      let _address = {};\n      if (id) {\n        _address = {\n          _id: id,\n          name,\n          mobileNumber,\n          pinCode,\n          locality,\n          address,\n          cityDistrictTown,\n          state,\n          landmark,\n          alternatePhone,\n          addressType,\n        };\n      } else {\n        _address = user.address.slice(user.address.length - 1)[0];\n      }\n\n      props.onSubmitForm(_address);\n    }\n  }, [user.address]);\n\n  const renderAddressForm = () => {\n    return (\n      <>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"10-digit mobile number\"\n              value={mobileNumber}\n              onChange={(e) => setMobileNumber(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Pincode\"\n              value={pinCode}\n              onChange={(e) => setPinCode(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Locality\"\n              value={locality}\n              onChange={(e) => setLocality(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"City/District/Town\"\n              value={cityDistrictTown}\n              onChange={(e) => setCityDistrictTown(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"State\"\n              value={state}\n              onChange={(e) => setState(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Landmark (Optional)\"\n              value={landmark}\n              onChange={(e) => setLandmark(e.target.value)}\n            />\n          </div>\n          <div style={inputContainer}>\n            <MaterialInput\n              label=\"Alternate Phone (Optional)\"\n              value={alternatePhone}\n              onChange={(e) => setAlternatePhone(e.target.value)}\n            />\n          </div>\n        </div>\n        <div>\n          <label>Address Type</label>\n          <div className=\"flexRow\">\n            <div>\n              <input\n                type=\"radio\"\n                onClick={() => setAddressType(\"home\")}\n                name=\"addressType\"\n                value=\"home\"\n              />\n              <span>Home</span>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                onClick={() => setAddressType(\"work\")}\n                name=\"addressType\"\n                value=\"work\"\n              />\n              <span>Work</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flexRow\">\n          <MaterialButton\n            title=\"SAVE AND DELIVER HERE\"\n            onClick={onAddressSubmit}\n            style={{\n              width: \"250px\",\n              margin: \"20px 0\",\n            }}\n          />\n        </div>\n      </>\n    );\n  };\n\n  if (props.withoutLayout) {\n    return <div>{renderAddressForm()}</div>;\n  }\n\n  return (\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\n      <div className={`checkoutHeader`}>\n        <div>\n          <span className=\"stepNumber\">+</span>\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\n        </div>\n      </div>\n      <div\n        style={{\n          padding: \"0 60px\",\n          paddingBottom: \"20px\",\n          boxSizing: \"border-box\",\n        }}>\n        {renderAddressForm()}\n      </div>\n    </div>\n  );\n};\n\nexport default AddressForm;\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\OrderPage\\index.js",["233","234"],"import React, { useEffect } from \"react\";\r\nimport { BiDollar } from \"react-icons/bi\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Breed } from \"../../components/MaterialUI\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { getOrders } from \"../../redux/actions\";\r\nimport \"./style.css\";\r\n\r\nconst OrderPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  console.log(user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{ maxWidth: \"1160px\", margin: \"5px auto\" }}>\r\n        <Breed\r\n          breed={[\r\n            { name: \"Home\", href: \"/\" },\r\n            { name: \"My Account\", href: \"/account\" },\r\n            { name: \"My Orders\", href: \"/account/orders\" },\r\n          ]}\r\n          breedIcon={<IoIosArrowForward />}\r\n        />\r\n\r\n        {user.orders &&\r\n          user.orders.map((order) => {\r\n            return order.items.map((item) => (\r\n              <Card style={{ display: \"block\", margin: \"5px 0\" }}>\r\n                <Link\r\n                  style={{ textDecoration: \"none\" }}\r\n                  to={`/order_details/${order._id}`}\r\n                  className=\"orderItemContainer\">\r\n                  <div className=\"orderImgContainer\">\r\n                    <img\r\n                      className=\"orderImg\"\r\n                      src={item.productId.productPictures[0].img}\r\n                    />\r\n                  </div>\r\n                  <div className=\"orderRow\">\r\n                    <div className=\"orderName\">{item.productId.name}</div>\r\n                    <div className=\"orderPrice\">\r\n                      <BiDollar />\r\n                      {item.payablePrice}\r\n                    </div>\r\n                    <div>{order.paymentStatus}</div>\r\n                  </div>\r\n                </Link>\r\n              </Card>\r\n            ));\r\n          })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js",["235","236"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\nimport { getProductBySlug } from \"../../../redux/actions\";\r\n\r\nconst ClothingAndAccessories = (props) => {\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getProductBySlug(match.params.slug));\r\n  }, []);\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Card\r\n        style={{\r\n          boxSizing: \"border-box\",\r\n          padding: \"20px\",\r\n          display: \"flex\",\r\n        }}>\r\n        {product.products &&\r\n          product.products.map((product) => (\r\n            <div className=\"caContainer\">\r\n              <Link\r\n                className=\"caImgContainer\"\r\n                to={`/${product.slug}/${product._id}/p`}>\r\n                <img src={product.productPictures[0].img} />\r\n              </Link>\r\n              <div>\r\n                <div className=\"caProductName\">{product.name}</div>\r\n                <div className=\"caProductPrice\">${product.price}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClothingAndAccessories;\r\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\containers\\OrderDetailsPage\\index.js",["237"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport Price from \"../../components/UI/Price\";\r\nimport { getOrder } from \"../../redux/actions\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst OrderDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.user.orderDetails);\r\n\r\n  useEffect(() => {\r\n    console.log({ props });\r\n    const payload = {\r\n      orderId: props.match.params.orderId,\r\n    };\r\n    dispatch(getOrder(payload));\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const formatDate2 = (date) => {\r\n    const month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\r\n    }\r\n  };\r\n\r\n  if (!(orderDetails && orderDetails.address)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        style={{\r\n          width: \"1160px\",\r\n          margin: \"10px auto\",\r\n        }}>\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}>\r\n          <div className=\"delAdrContainer\">\r\n            <div className=\"delAdrDetails\">\r\n              <div className=\"delTitle\">Delivery Address</div>\r\n              <div className=\"delName\">{orderDetails.address.name}</div>\r\n              <div className=\"delAddress\">{orderDetails.address.address}</div>\r\n              <div className=\"delPhoneNumber\">\r\n                Phone number {orderDetails.address.mobileNumber}\r\n              </div>\r\n            </div>\r\n            <div className=\"delMoreActionContainer\">\r\n              <div className=\"delTitle\">More Actions</div>\r\n              <div className=\"delName\">Download Invoice</div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {orderDetails.items.map((item, index) => (\r\n          <Card\r\n            style={{ display: \"flex\", padding: \"20px 0\", margin: \"10px 0\" }}>\r\n            <div className=\"flexRow\">\r\n              <div className=\"delItemImgContainer\">\r\n                <img src={item.productId.productPictures[0].img} alt=\"\" />\r\n              </div>\r\n              <div style={{ width: \"250px\" }}>\r\n                <div className=\"delItemName\">{item.productId.name}</div>\r\n                <Price value={item.payablePrice} />\r\n              </div>\r\n            </div>\r\n            <div style={{ padding: \"25px 50px\" }}>\r\n              <div className=\"orderTrack\">\r\n                {orderDetails.orderStatus.map((status) => (\r\n                  <div\r\n                    className={`orderStatus ${\r\n                      status.isCompleted ? \"active\" : \"\"\r\n                    }`}>\r\n                    <div\r\n                      className={`point ${\r\n                        status.isCompleted ? \"active\" : \"\"\r\n                      }`}></div>\r\n                    <div className=\"orderInfo\">\r\n                      <div className=\"status\">{status.type}</div>\r\n                      <div className=\"date\">{formatDate(status.date)}</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div style={{ fontWeight: \"500\", fontSize: 14 }}>\r\n              {orderDetails.orderStatus[3].isCompleted &&\r\n                `Delivered on ${formatDate2(orderDetails.orderStatus[3].date)}`}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Rating\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Price\\index.js",[],"E:\\ED\\mern stack\\flipkart clone\\projects\\mern-ecommerce\\frontend\\joy-flip-ecom\\src\\components\\UI\\Cart\\index.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":22,"column":6,"nodeType":"244","endLine":22,"endColumn":25,"suggestions":"245"},{"ruleId":"242","severity":1,"message":"243","line":27,"column":6,"nodeType":"244","endLine":27,"endColumn":25,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":12,"column":16,"nodeType":"249","messageId":"250","endLine":12,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":26,"column":17,"nodeType":"249","messageId":"250","endLine":26,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":59,"column":1,"nodeType":"253","endLine":187,"endColumn":3},{"ruleId":"254","severity":1,"message":"255","line":60,"column":3,"nodeType":"256","messageId":"257","endLine":93,"endColumn":4},{"ruleId":"258","severity":1,"message":"259","line":5,"column":26,"nodeType":"260","messageId":"261","endLine":5,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":67,"column":6,"nodeType":"244","endLine":67,"endColumn":8,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":72,"column":15,"nodeType":"265","endLine":72,"endColumn":39},{"ruleId":"263","severity":1,"message":"264","line":94,"column":11,"nodeType":"265","endLine":99,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":121,"column":13,"nodeType":"265","endLine":126,"endColumn":44},{"ruleId":"263","severity":1,"message":"266","line":204,"column":11,"nodeType":"265","endLine":204,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":207,"column":11,"nodeType":"265","endLine":207,"endColumn":45},{"ruleId":"263","severity":1,"message":"264","line":241,"column":15,"nodeType":"265","endLine":241,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":12,"column":6,"nodeType":"244","endLine":12,"endColumn":8,"suggestions":"267"},{"ruleId":"251","severity":1,"message":"252","line":20,"column":1,"nodeType":"253","endLine":75,"endColumn":3},{"ruleId":"254","severity":1,"message":"255","line":21,"column":3,"nodeType":"256","messageId":"257","endLine":72,"endColumn":4},{"ruleId":"251","severity":1,"message":"252","line":1,"column":1,"nodeType":"253","endLine":17,"endColumn":2},{"ruleId":"242","severity":1,"message":"268","line":21,"column":6,"nodeType":"244","endLine":21,"endColumn":8,"suggestions":"269"},{"ruleId":"258","severity":1,"message":"270","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":25},{"ruleId":"258","severity":1,"message":"271","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":22},{"ruleId":"242","severity":1,"message":"272","line":27,"column":6,"nodeType":"244","endLine":27,"endColumn":8,"suggestions":"273"},{"ruleId":"251","severity":1,"message":"252","line":18,"column":1,"nodeType":"253","endLine":68,"endColumn":3},{"ruleId":"254","severity":1,"message":"255","line":21,"column":3,"nodeType":"256","messageId":"257","endLine":65,"endColumn":4},{"ruleId":"251","severity":1,"message":"252","line":12,"column":1,"nodeType":"253","endLine":87,"endColumn":3},{"ruleId":"254","severity":1,"message":"255","line":13,"column":3,"nodeType":"256","messageId":"257","endLine":84,"endColumn":4},{"ruleId":"258","severity":1,"message":"274","line":7,"column":19,"nodeType":"260","messageId":"261","endLine":7,"endColumn":27},{"ruleId":"258","severity":1,"message":"275","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":27},{"ruleId":"242","severity":1,"message":"272","line":33,"column":6,"nodeType":"244","endLine":33,"endColumn":8,"suggestions":"276"},{"ruleId":"263","severity":1,"message":"266","line":137,"column":17,"nodeType":"265","endLine":137,"endColumn":29},{"ruleId":"263","severity":1,"message":"266","line":141,"column":17,"nodeType":"265","endLine":141,"endColumn":29},{"ruleId":"263","severity":1,"message":"266","line":145,"column":17,"nodeType":"265","endLine":145,"endColumn":29},{"ruleId":"263","severity":1,"message":"266","line":149,"column":17,"nodeType":"265","endLine":149,"endColumn":29},{"ruleId":"242","severity":1,"message":"243","line":37,"column":6,"nodeType":"244","endLine":37,"endColumn":25,"suggestions":"277"},{"ruleId":"258","severity":1,"message":"275","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":27},{"ruleId":"251","severity":1,"message":"252","line":17,"column":1,"nodeType":"253","endLine":45,"endColumn":2},{"ruleId":"254","severity":1,"message":"255","line":18,"column":5,"nodeType":"256","messageId":"257","endLine":43,"endColumn":6},{"ruleId":"242","severity":1,"message":"243","line":170,"column":6,"nodeType":"244","endLine":170,"endColumn":25,"suggestions":"278"},{"ruleId":"242","severity":1,"message":"279","line":186,"column":6,"nodeType":"244","endLine":186,"endColumn":26,"suggestions":"280"},{"ruleId":"258","severity":1,"message":"281","line":42,"column":14,"nodeType":"260","messageId":"261","endLine":42,"endColumn":19},{"ruleId":"242","severity":1,"message":"282","line":97,"column":6,"nodeType":"244","endLine":97,"endColumn":20,"suggestions":"283"},{"ruleId":"242","severity":1,"message":"243","line":20,"column":6,"nodeType":"244","endLine":20,"endColumn":8,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":43,"column":21,"nodeType":"265","endLine":46,"endColumn":23},{"ruleId":"242","severity":1,"message":"272","line":16,"column":6,"nodeType":"244","endLine":16,"endColumn":8,"suggestions":"287"},{"ruleId":"285","severity":1,"message":"286","line":31,"column":17,"nodeType":"265","endLine":31,"endColumn":61},{"ruleId":"242","severity":1,"message":"272","line":20,"column":6,"nodeType":"244","endLine":20,"endColumn":8,"suggestions":"288"},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["291"],["292"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'IoIosCart' is defined but never used.","Identifier","unusedVar",["293"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["294"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["295"],"'useState' is defined but never used.","'genPublicUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["296"],"'BiZoomIn' is defined but never used.","'generatePublicUrl' is defined but never used.",["297"],["298"],["299"],"React Hook useEffect has missing dependencies: 'confirmOrder' and 'props.history'. Either include them or remove the dependency array.",["300"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', 'submitFlag', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["301"],["302"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["303"],["304"],"no-global-assign","no-unsafe-negation",{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"308","fix":"309"},{"desc":"308","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"305","fix":"316"},{"desc":"305","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"308","fix":"322"},{"desc":"313","fix":"323"},{"desc":"313","fix":"324"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"325","text":"326"},{"range":"327","text":"326"},"Update the dependencies array to be: [dispatch]",{"range":"328","text":"329"},{"range":"330","text":"329"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"331","text":"332"},"Update the dependencies array to be: [dispatch, props]",{"range":"333","text":"334"},{"range":"335","text":"334"},{"range":"336","text":"326"},{"range":"337","text":"326"},"Update the dependencies array to be: [confirmOrder, props.history, user.placedOrderId]",{"range":"338","text":"339"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",{"range":"340","text":"341"},{"range":"342","text":"329"},{"range":"343","text":"334"},{"range":"344","text":"334"},[829,848],"[auth.authenticate, dispatch]",[945,964],[1670,1672],"[dispatch]",[364,366],[735,737],"[dispatch, props.location.search]",[960,962],"[dispatch, props]",[1211,1213],[1077,1096],[5010,5029],[5414,5434],"[confirmOrder, props.history, user.placedOrderId]",[2578,2592],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",[660,662],[526,528],[630,632]]